import{_ as n,o as s,c as a,d as t}from"./app.2bb7c9ba.js";const e="/assets/image-20220829160037207.92d59f38.png",p="/assets/image-20220902165619031.1d450db5.png",l={},i=t(`<h1 id="javaweb笔记" tabindex="-1"><a class="header-anchor" href="#javaweb笔记" aria-hidden="true">#</a> JavaWeb笔记</h1><h2 id="一-简介" tabindex="-1"><a class="header-anchor" href="#一-简介" aria-hidden="true">#</a> 一 简介</h2><h3 id="_1-1-javaweb概念" tabindex="-1"><a class="header-anchor" href="#_1-1-javaweb概念" aria-hidden="true">#</a> 1.1 JavaWeb概念</h3><ol><li>通过Java语言编写的，可以通过浏览器访问的程序</li><li>JavaWeb是基于请求和响应开发的</li></ol><h3 id="_1-2-web资源的分类" tabindex="-1"><a class="header-anchor" href="#_1-2-web资源的分类" aria-hidden="true">#</a> 1.2 Web资源的分类</h3><ul><li>**静态资源：**html、css、js、txt、图片、视频</li><li>**动态资源：**jsp页面、servlet程序</li></ul><h3 id="_1-3-常用的服务器" tabindex="-1"><a class="header-anchor" href="#_1-3-常用的服务器" aria-hidden="true">#</a> 1.3 常用的服务器</h3><ul><li><strong>Tomcat</strong></li><li><strong>Jboss</strong></li><li><strong>GlashFish</strong></li><li><strong>Resin</strong></li><li><strong>WebLogic</strong></li></ul><h2 id="二、servlet" tabindex="-1"><a class="header-anchor" href="#二、servlet" aria-hidden="true">#</a> 二、Servlet</h2><h3 id="_2-1-servlet技术" tabindex="-1"><a class="header-anchor" href="#_2-1-servlet技术" aria-hidden="true">#</a> 2.1 Servlet技术</h3><ol><li>Servlet是JavaEE规范之一，就是<strong>接口</strong></li><li>Servlet是运行在服务器上的java小程序，可以接收客户端发送过来的请求，并响应数据给客户端</li></ol><h3 id="_2-2-第一个servlet程序" tabindex="-1"><a class="header-anchor" href="#_2-2-第一个servlet程序" aria-hidden="true">#</a> 2.2 第一个Servlet程序</h3><ol><li><p>编写一个类去实现Servlet接口</p></li><li><p>实现service方法</p></li><li><p>到web.xml配置Servlet的地址</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xmlns.jcp.org/xml/ns/javaee<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4.0<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!--属于整个Web工程--&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>username<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>yanmingkui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context-param</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context-param</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--给servlet标签起个别名 一般是类名--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">&gt;</span></span>com.example.tcdemo.HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--只能在init()中获取--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>init-param</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-name</span><span class="token punctuation">&gt;</span></span>username<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-name</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param-value</span><span class="token punctuation">&gt;</span></span>jimowo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>param-value</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>init-param</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!--给servlet程序配置访问地址--&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!--告诉服务器当前配置的地址给哪个程序使用--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">&gt;</span></span>HelloServlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_2-3-servlet的生命周期" tabindex="-1"><a class="header-anchor" href="#_2-3-servlet的生命周期" aria-hidden="true">#</a> 2.3 Servlet的生命周期</h3><ol><li>执行 Servlet 构造器方法</li><li>init 初始化方法</li><li>service 方法</li><li>destory 方法</li></ol><p>第1、2步只有在第一次创建实例时会调用</p><p>service方法每次访问都会调用</p><h3 id="_2-4-servlet的继承体系" tabindex="-1"><a class="header-anchor" href="#_2-4-servlet的继承体系" aria-hidden="true">#</a> 2.4 Servlet的继承体系</h3><p><img src="`+e+`" alt="image-20220829160037207"></p><h3 id="_2-5-servletconfig类" tabindex="-1"><a class="header-anchor" href="#_2-5-servletconfig类" aria-hidden="true">#</a> 2.5 ServletConfig类</h3><p>servlet程序的配置信息</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ServletConfig</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> <span class="token function">getServletName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">ServletContext</span> <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token class-name">String</span> <span class="token function">getInitParameter</span><span class="token punctuation">(</span><span class="token class-name">String</span> var1<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getInitParameterNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-servletcontext类" tabindex="-1"><a class="header-anchor" href="#_2-6-servletcontext类" aria-hidden="true">#</a> 2.6 ServletContext类</h3><ol><li>ServletContext是一个域对象，表示Servlet的上下文</li><li>一个Web工程只有一个Servlet对象实例</li><li>域对象可以像Map一样存取数据</li><li>包含的信息：context-param、当前工程的路径、工程部署在硬盘的绝对路径</li></ol><h3 id="_2-7-区分get请求和post请求" tabindex="-1"><a class="header-anchor" href="#_2-7-区分get请求和post请求" aria-hidden="true">#</a> 2.7 区分Get请求和Post请求</h3><ul><li><strong>Get</strong><ol><li>form标签 method=post</li><li>a标签</li><li>link标签 引入css</li><li>script标签 引入js</li><li>img标签 引入图片</li><li>iframe标签 引入html页面</li><li>在浏览器地址栏中输入地址后敲回车</li></ol></li><li><strong>Post</strong><ol><li>form标签 method=post</li></ol></li></ul><h3 id="_2-8-httpservletrequest类" tabindex="-1"><a class="header-anchor" href="#_2-8-httpservletrequest类" aria-hidden="true">#</a> 2.8 HttpServletRequest类</h3><p>可以通过HttpServletRequest类获得多有请求的信息</p><ol><li>getHeader方法获得头</li><li>getParameter方法获得对应参数</li><li>getParameterValues获得一个参数的数组</li></ol><p>解决POST请求的乱码问题</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-9-servlet请求转发" tabindex="-1"><a class="header-anchor" href="#_2-9-servlet请求转发" aria-hidden="true">#</a> 2.9 Servlet请求转发</h3><p>只能在自己的工程里跳转</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;TransServlet1&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/TransServlet1&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransServlet1</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取请求的参数</span>
        <span class="token class-name">String</span> username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;servlet 1 username: &quot;</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 给材料盖一个章，传送到transServlet2</span>
        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;柜台1的章&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 问路 Servlet2 怎么走</span>
        <span class="token class-name">RequestDispatcher</span> requestDispatcher <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/TransServlet2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        requestDispatcher<span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;TransServlet2&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;/TransServlet2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TransServlet2</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取请求的参数</span>
        <span class="token class-name">String</span> username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;servlet 1 username: &quot;</span> <span class="token operator">+</span> username<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 查看transServlet1的章</span>
        <span class="token class-name">Object</span> key <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;key&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-10-httpservletresponse类" tabindex="-1"><a class="header-anchor" href="#_2-10-httpservletresponse类" aria-hidden="true">#</a> 2.10 HttpServletResponse类</h3><p>HttpServletRequest表示请求信息，HttpServletResponse表示响应信息</p><ul><li><p><strong>两个输出流</strong></p><ol><li>字节流 getOutputStream() 常用于下载</li><li>字符流 getWriter() 常用于回传字符串</li></ol><p>两个流同时只能使用一个</p></li><li><p><strong>如何向客户端回传数据</strong></p><div class="language-Java line-numbers-mode" data-ext="Java"><pre class="language-Java"><code>response.setCharacterEncoding(&quot;UTF-8&quot;); // 显示中文 默认编码ISO-8859-1
response.setContentType(&quot;text/html&quot;);

// Hello
out.println(&quot;&lt;html&gt;&lt;body&gt;&quot;);
out.println(&quot;&lt;h1&gt;&quot; + message + &quot;&lt;/h1&gt;&quot;);
out.println(&quot;&lt;/body&gt;&lt;/html&gt;&quot;);

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_2-11-请求重定向" tabindex="-1"><a class="header-anchor" href="#_2-11-请求重定向" aria-hidden="true">#</a> 2.11 请求重定向</h3><p>指客户端给服务器发请求，然后服务器让客户端重新定向到新地址</p><h2 id="三、filter过滤器" tabindex="-1"><a class="header-anchor" href="#三、filter过滤器" aria-hidden="true">#</a> 三、Filter过滤器</h2><h3 id="_3-1-什么是filter" tabindex="-1"><a class="header-anchor" href="#_3-1-什么是filter" aria-hidden="true">#</a> 3.1 什么是Filter</h3><p>filter过滤器也是个接口，作用是<strong>拦截请求、过滤响应</strong></p><p>拦截请求的场景有：</p><ol><li>权限检查</li><li>日记操作</li><li>事务管理</li><li>。。。</li></ol><h3 id="_3-2-filter应用" tabindex="-1"><a class="header-anchor" href="#_3-2-filter应用" aria-hidden="true">#</a> 3.2 Filter应用</h3><p>要求：Web工程下，有一个admin目录。这个目录下的资源必须是用户登录后才允许访问</p><p><img src="`+p+`" alt="image-20220902165619031"></p><p><strong>Filter使用步骤</strong></p><ol><li><p>编写一个Filter类去实现Filter接口，并实现doFilter()方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AdminFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token class-name">FilterConfig</span> config<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ServletException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">HttpServletRequest</span> httpServletRequest <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> request<span class="token punctuation">;</span>
    <span class="token class-name">HttpSession</span> session <span class="token operator">=</span> httpServletRequest<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Object</span> user <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 判读是否登录</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">&quot;/login.jsp&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// 让程序继续访问用户的目标资源</span>
        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置web.xml</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&lt;filter&gt;
  &lt;filter-name&gt;AdminFilter&lt;/filter-name&gt;
  &lt;filter-class&gt;com.example.tcdemo.AdminFilter&lt;/filter-class&gt;
&lt;/filter&gt;
&lt;filter-mapping&gt;
  &lt;filter-name&gt;AdminFilter&lt;/filter-name&gt;
  &lt;url-pattern&gt;/admin/*&lt;/url-pattern&gt;
&lt;/filter-mapping&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_3-3-filter的生命周期" tabindex="-1"><a class="header-anchor" href="#_3-3-filter的生命周期" aria-hidden="true">#</a> 3.3 Filter的生命周期</h3><ul><li><p>Filter的生命周期包含几个方法：</p><ol><li>构造器方法</li><li>init初始化方法</li><li>doFilter方法</li><li>destory方法</li></ol><p>1、2在创建时就会调用</p></li></ul><h3 id="_3-4-filterconfig类" tabindex="-1"><a class="header-anchor" href="#_3-4-filterconfig类" aria-hidden="true">#</a> 3.4 FilterConfig类</h3><p>Filter过滤器的配置文件类，Tomcat每次创建Filter的时候，也会同时创建一个FilterConfig类，包含了Filter配置文件的配置信息</p><ol><li>获取 Filter 的filter name</li><li>获取init parameter</li><li>获取Servlet context对象</li></ol><h3 id="_3-5-filterchain类" tabindex="-1"><a class="header-anchor" href="#_3-5-filterchain类" aria-hidden="true">#</a> 3.5 FilterChain类</h3><ul><li><p>FilterChain.doFilter() 方法的作用</p><ol><li>执行下一个Filter过滤器</li><li>执行目标资源</li></ol></li><li><p><strong>Filter执行顺序</strong></p><p>在多个Filter过滤器执行的时候，它们的执行顺序是由他们在web.xml中从上到下的配置顺序决定的</p></li></ul><h3 id="_3-6-filter的拦截路径" tabindex="-1"><a class="header-anchor" href="#_3-6-filter的拦截路径" aria-hidden="true">#</a> 3.6 Filter的拦截路径</h3><ul><li><p><strong>精确匹配</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>target.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>目录匹配</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>/admin/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>目录下的全部资源</p></li><li><p><strong>后缀名匹配</strong></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">&gt;</span></span>*.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>匹配所有的html结尾的文件</p></li></ul>`,59),o=[i];function c(u,r){return s(),a("div",null,o)}const k=n(l,[["render",c],["__file","JavaWeb笔记.html.vue"]]);export{k as default};
